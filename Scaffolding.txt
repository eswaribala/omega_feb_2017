Install-Package EntityFramework -version 6.1.3 
Install-Package entityframework -version 5.0.0
Enable-Migrations: Enables Code First Migrations in a project.
Add-Migration: Scaffolds a migration script for any pending model changes.
Update-Database: Applies any pending migrations to the database.
Get-Migrations: Displays the migrations that have been applied to the target database.

Enable-Migrations [-ContextTypeName <String>] [-EnableAutomaticMigrations] 
  [-MigrationsDirectory <String>] [-ProjectName <String>] [-StartUpProjectName <String>] 
  [-ContextProjectName <String>] [-ConnectionStringName <String>] [-Force] 
  [-ContextAssemblyName <String>] [-AppDomainBaseDirectory <String>] [<CommonParameters>]
 
Enable-Migrations [-ContextTypeName <String>] [-EnableAutomaticMigrations] 
  [-MigrationsDirectory <String>] [-ProjectName <String>] [-StartUpProjectName <String>]
  [-ContextProjectName <String>] -ConnectionString <String> 
  -ConnectionProviderName <String> [-Force] [-ContextAssemblyName <String>] 
  [-AppDomainBaseDirectory <String>] [<CommonParameters>]

Add-Migration [-Name] <String> [-Force] [-ProjectName <String>] [-StartUpProjectName <String>] 
  [-ConfigurationTypeName <String>] [-ConnectionStringName <String>] [-IgnoreChanges] 
  [-AppDomainBaseDirectory <String>] [<CommonParameters>]
 
Add-Migration [-Name] <String> [-Force] [-ProjectName <String>] [-StartUpProjectName <String>] 
  [-ConfigurationTypeName <String>] -ConnectionString <String> -ConnectionProviderName <String> 
  [-IgnoreChanges] [-AppDomainBaseDirectory <String>] [<CommonParameters>]

Update-Database [-SourceMigration <String>] [-TargetMigration <String>] [-Script] [-Force] 
  [-ProjectName <String>] [-StartUpProjectName <String>] [-ConfigurationTypeName <String>] 
  [-ConnectionStringName <String>] [-AppDomainBaseDirectory <String>] [<CommonParameters>]
 
Update-Database [-SourceMigration <String>] [-TargetMigration <String>] [-Script] [-Force] 
  [-ProjectName <String>] [-StartUpProjectName <String>] [-ConfigurationTypeName <String>] 
  -ConnectionString <String> -ConnectionProviderName <String> 
  [-AppDomainBaseDirectory <String>] [<CommonParameters>]

enable-migrations -Force -contexttypename CourseDBContext
1.enable-migrations  -contexttypename OmegaContext
2.add-migration InitialCreate
3.update-database
Install-package angularjs

--user-data-dir="C:/Chrome dev session" --disable-web-security

alter table
 add-migration AddEmail
update-database
adding new table
add-migration AddUser
update-database


http://www.entityframeworktutorial.net/code-first/foreignkey-dataannotations-attribute-in-code-first.aspx

Install-Package MvcScaffolding
Scaffold Controller Team 
Scaffold Controller Task -Repository -Force
2: Scaffold Controller Note -Repository -Force    
3: Scaffold Controller Status -Repository -Force

Automated Migration
"enable-migrations –EnableAutomaticMigration:$true

Install-Package PagedList.Mvc
[Table("StudentInfo")]
    public class Student
    {
        public Student(){ }
        
        [Key]
        public int SID { get; set; }

        [Required(ErrorMessage="Student Name is Required" )]
        [Column("Name", TypeName="ntext")]        
        [MaxLength(20), MinLength(2, ErrorMessage="Student name can not be 2 character or less")]
        public string StudentName { get; set; }

        [NotMapped]
        public int? Age { get; set; }

        [ConcurrencyCheck()]
        [Timestamp]
        public Byte[] LastModifiedTimestamp { get; set; }

        public int? MathScore { get; set; }
        
        public int? ScienceScore { get; set; }


        [DatabaseGenerated(DatabaseGeneratedOption.Computed)]
        public int? TotalScore
        {
            get;
            set;

        }
        
        public int StdId { get; set; }

        [ForeignKey("StdId")]
        public virtual Standard Standard { get; set; }
    }
        





  [Table("StudentInfo")]
    public class Student
    {
        public Student() { }
        
        [Key]
        public int SID { get; set; }

        [Column("Name", TypeName="ntext")]
        [MaxLength(20)]
        public string StudentName { get; set; }

        [NotMapped]
        public int? Age { get; set; }
        
        
        public int StdId { get; set; }

        [ForeignKey("StdId")]
        public virtual Standard Standard { get; set; }
    }
        